---
- hosts: localhost
  tasks:
  - name: create key pair, and private key
    amazon.aws.ec2_key:
      name: projectkey
    register: ec2_key_pass_key

  - name: Save private key on local
    copy: content="{{ ec2_key_result.key.private_key }}" dest="~/.aws/projectkey.pem" mode=0600
    when: ec2_key_project.changed

  - name: Create EC2 group
    amazon.aws.ec2_group:
      name: "groupset001"
      description: allow all
      rules:
        - proto: tcp
          ports:
          - 80
          cidr_ip: 0.0.0.0/0
          rule_desc: allow all on port 80
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 10.0.0.0/0
          rule_desc: allow all on port 22
    register: groupset001

  - name: LoadBalancer
    amazon.aws.ec2_elb_lb:
      name: my-load-balancer
      state: present
      zones:
        - us-west-1a
        - us-west-1c
      listeners:
        - protocol: http
          load_balancer_port: 80
          instance_port: 80
    register: LoadBalancerELB

  - name: MasterNode
    amazon.aws.ec2:
      keypair: projectkey
      group_id:
      - "{{ groupset001.group_id }}"
      - "{{ LoadBalancerELB.elb.security_group_ids | first }}"
      instance_type: t2.micro
      image:  ami-07b068f843ec78e72
      wait: yes
      count: 1
    register: master_kube

  - name: Elastic IP Master
    community.aws.ec2_eip:
      device_id: "{{ item }}"
      in_vpc: true
    loop: "{{ master_Kube.instance_ids }}"
    register: master_elastic

  - name: output the master_kube
    ansible.builtin.debug:
      msg: "{{ master_kube }}"

  - name: output master_ips
    ansible.builtin.debug:
      msg: "{{ master_elastic}}"

  - name: WorkerNodes
    amazon.aws.ec2:
      group: groupset001
      keypair: projectkey
      # id: 'WNodes00'
      instance_type: t2.micro
      image: ami-0747bdcabd34c712a
      wait: yes
      count: 2
    register: WNodes00

